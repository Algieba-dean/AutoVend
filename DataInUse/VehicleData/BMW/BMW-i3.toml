# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "BMW-i3"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "40,000~60,000"
prize_comments = "The BMW-i3 is priced between $44,450 and $56,500 USD depending on the trim level and options."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Compact Sedan"
vehicle_category_bottom_comments = "The BMW-i3 is a compact electric hatchback with a unique design and urban-focused dimensions."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "BMW"
brand_comments = "BMW is a German luxury automaker known for performance-oriented vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Battery Electric Vehicle"
powertrain_type_comments = "The BMW-i3 is a pure electric vehicle with no combustion engine."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The i3 offers 2.8 cubic meters of passenger space, optimized for urban commuting."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "300~400L"
trunk_volume_comments = "The trunk capacity is 360L, expandable to 1,100L with rear seats folded."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The wheelbase is 2,570mm, providing stable handling in urban environments."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "130~150mm"
chassis_height_comments = "Ground clearance is 140mm, suitable for city driving."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "The i3 features a futuristic, sporty design with suicide doors and a tall greenhouse."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "High"
body_line_smoothness_comments = "The i3 has very smooth body lines with a drag coefficient of 0.29."

# color, candidate values: "Bright Colors, "Neutral Colors, "Dark Colors"
color = "Bright Colors"
color_comments = "BMW offers the i3 in vibrant colors like Protonic Blue and Solar Orange."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Wood Trim"
interior_material_texture_comments = "The i3 features sustainable eucalyptus wood trim as standard."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Standard anti-lock braking system with electronic brake-force distribution."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program is standard across all i3 models."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "6"
airbag_count_comments = "Includes dual front, side, and curtain airbags."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Fabric"
seat_material_comments = "Standard seats use recycled PET fabric; leather is optional."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "High"
noise_insulation_comments = "Excellent noise insulation due to electric drivetrain and acoustic glass."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "Yes"
voice_interfaction_comments = "BMW's iDrive system includes natural voice control."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "Yes"
ota_updates_comments = "Supports over-the-air updates for infotainment and vehicle software."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "Offers Level 2 autonomy with optional Driving Assistant Professional."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "Yes"
adaptive_cruise_control_comments = "Available as part of the Driving Assistant package."

# traffic_jam_assit, candidate values: "Yes", "No"
traffic_jam_assit = "Yes"
traffic_jam_assit_comments = "Traffic Jam Assistant is optional, works under 37 mph."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "Yes"
automatic_emergency_braking_comments = "Standard forward collision warning with automatic braking."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "Yes"
lane_keep_assist_comments = "Lane Departure Warning is standard; Lane Keeping Assist is optional."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Does not offer remote parking functionality."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "Yes"
auto_parking_comments = "Available Parking Assistant can handle parallel and perpendicular spaces."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "Yes"
blind_spot_detection_comments = "Blind spot monitoring is available as part of driver assistance packages."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "Yes"
fatigue_driving_detection_comments = "Attention Assistant monitors driving behavior for signs of fatigue."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "None"
engine_displacement_comments = "Not applicable - this is a pure electric vehicle."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "120~180kW"
motor_power_comments = "The i3 produces 125 kW (168 hp) in standard form, 135 kW (181 hp) in i3s version."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "30~50kWh"
battery_capacity_comments = "42.2 kWh net battery capacity (120Ah version)."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "None"
fuel_tank_capacity_comments = "Not applicable - this is a pure electric vehicle."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "100~200hp"
horsepower_comments = "168 hp (standard) or 181 hp (i3s) electric motor output."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "200~300N·m"
torque_comments = "Produces 250 N·m (184 lb-ft) of torque from 0 rpm."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "6~8s"
zero_to_one_hundred_km_h_acceleration_time_comments = "7.3 seconds for standard i3, 6.9 seconds for i3s."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "160~200km/h"
top_speed_comments = "Electronically limited to 150 km/h (93 mph) or 160 km/h (99 mph) for i3s."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "None"
fuel_consumption_comments = "Not applicable - this is a pure electric vehicle."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "12~14kWh/100km"
electric_consumption_comments = "Official consumption is 13.1 kWh/100 km in WLTP test cycle."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "WLTP range is 307-310 km (191-193 miles) for 120Ah battery."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "Rear-Wheel Drive"
drive_type_comments = "Rear-mounted electric motor driving the rear wheels."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "MacPherson strut front, five-link rear suspension."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Medium"
passibility_comments = "Good urban maneuverability but limited by short wheelbase and stiff suspension."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "4-seat"
seat_layout_comments = "Standard configuration is 2+2 seating due to rear suicide doors."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "Yes"
city_commuting_comments = "Ideal for city use with compact dimensions and instant electric torque."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "No"
highway_long_distance_comments = "Limited by range and charging infrastructure for long trips."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Not designed for off-road use due to low ground clearance and RWD."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "Yes"
cargo_capability_comments = "Practical cargo space with foldable rear seats."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Battery performance decreases in cold weather, but thermal management helps."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "Effective battery cooling system maintains performance in hot conditions."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Small"
size_comments = "Compact footprint optimized for urban environments."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Medium"
vehicle_usability_comments = "Excellent for city use but limited for families or long trips."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "High"
aesthetics_comments = "Distinctive, futuristic design that stands out."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "Low"
energy_consumption_level_comments = "Very efficient electric drivetrain."

# confort_level: candidate values: "Low", "Medium", "High"
confort_level = "High"
confort_level_comments = "Premium materials and quiet electric operation."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "High"
smartness_comments = "Advanced connectivity and driver assistance features."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Medium"
family_friendliness_comments = "Good for small families but limited rear space."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details="The BMW i3 features a unique carbon fiber reinforced plastic (CFRP) passenger cell mounted on an aluminum chassis, making it exceptionally light yet strong. Its distinctive design includes rear-hinged suicide doors and extensive use of sustainable materials. The electric motor provides instant torque for responsive urban driving, while the tight turning circle makes it exceptionally maneuverable in city environments."
key_details_comments = "The BMW i3's innovative construction uses a carbon fiber reinforced plastic (CFRP) life module mounted on an aluminum drive module, achieving an optimal balance between lightweight design (1,315 kg curb weight) and structural rigidity. Its distinctive suicide door configuration (rear-hinged rear doors) facilitates access to the rear seats while maintaining a compact footprint. The interior features sustainable materials including eucalyptus wood trim and recycled PET fabrics. With a tight 9.86-meter turning circle and instant 250 N·m torque from its rear-mounted electric motor, the i3 excels in urban environments. The 42.2 kWh battery provides 307-310 km WLTP range, supported by DC fast charging capability (0-80% in 42 minutes at 50 kW)."