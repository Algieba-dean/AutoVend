# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Lamborghini-Aventador S"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "Above 100,000"
prize_comments = "The Lamborghini Aventador S has a base price of approximately $421,000 USD, with higher trims and options exceeding $500,000 USD."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Two-door Hardtop Sports Car"
vehicle_category_bottom_comments = "The Aventador S is a high-performance two-door coupe with a fixed roof, designed as a flagship supercar."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Lamborghini"
brand_comments = "Lamborghini is an Italian luxury sports car manufacturer known for high-performance vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Gasoline Engine"
powertrain_type_comments = "The Aventador S is powered by a naturally aspirated V12 gasoline engine."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The cabin is compact, optimized for driver-focused performance with limited passenger space."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "200~300L"
trunk_volume_comments = "The front trunk has a capacity of approximately 220 liters, typical for supercars."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The wheelbase measures 2700mm, providing stability at high speeds."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "100~130mm"
chassis_height_comments = "Ground clearance is approximately 125mm, optimized for aerodynamic performance."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "Aggressive, angular styling with sharp lines and aerodynamic features."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "Low"
body_line_smoothness_comments = "The design features sharp, angular lines rather than smooth curves."

# color, candidate values: "Bright Colors, "Neutral Colors, "Dark Colors"
color = "Bright Colors"
color_comments = "Lamborghini offers vibrant colors like Arancio Atlas (orange) and Giallo Horus (yellow)."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "Premium aluminum and carbon fiber accents dominate the interior."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Standard anti-lock braking system for improved control during hard braking."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program helps maintain control during dynamic driving."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "6"
airbag_count_comments = "Includes dual front, side, and knee airbags for driver and passenger."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Lether"
seat_material_comments = "Premium Alcantara and leather upholstery with extensive customization options."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "Low"
noise_insulation_comments = "Minimal sound deadening to emphasize the V12 engine note."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "No"
voice_interfaction_comments = "Focus is on driving experience rather than advanced infotainment features."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "No"
ota_updates_comments = "Traditional supercar with no over-the-air update capability."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "Basic driver assistance features but not designed for autonomous driving."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "No"
adaptive_cruise_control_comments = "Not available, as it's a driver-focused performance vehicle."

# traffic_jam_assist, candidate values: "Yes", "No"
traffic_jam_assist = "No"
traffic_jam_assist_comments = "Not equipped with traffic jam assistance systems."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "No"
automatic_emergency_braking_comments = "Not a focus for this high-performance sports car."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "No"
lane_keep_assist_comments = "No lane keeping assistance as it's designed for engaged driving."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "No remote parking capability in this driver-focused supercar."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "No"
auto_parking_comments = "Manual parking only - not equipped with automated parking systems."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "No"
blind_spot_detection_comments = "No blind spot monitoring system included."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "No"
fatigue_driving_detection_comments = "No driver fatigue detection system present."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "Above 6.0L"
engine_displacement_comments = "6.5-liter (6,498 cc) naturally aspirated V12 engine."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "None"
motor_power_comments = "Not applicable as this is a gasoline-powered vehicle."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "None"
battery_capacity_comments = "No large battery as this is not an electric or hybrid vehicle."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "Above 70L"
fuel_tank_capacity_comments = "90-liter fuel tank capacity for extended range despite high consumption."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "Above 400hp"
horsepower_comments = "730 hp (544 kW) at 8,400 rpm - extreme performance specification."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "Above 500N·m"
torque_comments = "690 N·m (509 lb-ft) at 5,500 rpm - massive pulling power."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "Below 4s"
zero_to_one_hundred_km_h_acceleration_time_comments = "2.9 seconds 0-100 km/h acceleration - blistering performance."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "Above 300km/h"
top_speed_comments = "350 km/h (217 mph) maximum speed - true supercar performance."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "Above 8L/100km"
fuel_consumption_comments = "Approximately 17.2 L/100km combined - high consumption expected for V12 performance."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "None"
electric_consumption_comments = "Not applicable as this is not an electric vehicle."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "Approximately 350-400 km range due to high fuel consumption."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "All-Wheel Drive"
drive_type_comments = "Lamborghini's advanced Haldex all-wheel-drive system for maximum traction."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Pushrod-activated independent suspension with magnetorheological dampers."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Low"
passibility_comments = "Very low ground clearance limits ability to navigate rough terrain."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "2-seat"
seat_layout_comments = "Strict two-seat configuration - driver and passenger only."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "No"
city_commuting_comments = "Not practical for daily commuting due to size, visibility, and ride harshness."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "Yes"
highway_long_distance_comments = "Capable of long distances but not comfortable for extended periods."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Not designed for off-road use - strictly a road-going supercar."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "No"
cargo_capability_comments = "Minimal storage space - not designed for cargo transport."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Performance may be affected in very cold conditions despite standard features."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "Engine and cooling systems designed to handle extreme performance conditions."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Medium"
size_comments = "Mid-size supercar dimensions: 4.79m long, 2.03m wide, 1.136m tall."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Small"
vehicle_usability_comments = "Limited practicality - focused purely on performance driving."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "High"
aesthetics_comments = "Striking, aggressive design that turns heads."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "High"
energy_consumption_level_comments = "Extremely high fuel consumption typical of V12 supercars."

# comfort_level: candidate values: "Low", "Medium", "High"
comfort_level = "Low"
comfort_level_comments = "Firm ride and loud cabin - not designed for comfort."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "Low"
smartness_comments = "Minimal advanced tech features - focused on raw driving experience."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Low"
family_friendliness_comments = "Two-seat configuration and impractical nature make it unsuitable for families."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details = "The Lamborghini Aventador S features a 6.5L V12 producing 730hp, all-wheel drive, and a 7-speed ISR transmission. It incorporates rear-wheel steering and features extensive use of carbon fiber in its construction. The car represents the pinnacle of Lamborghini's naturally aspirated V12 lineup before hybrid technology was introduced."
key_details_comments = "The Lamborghini Aventador S represents the ultimate expression of Lamborghini's naturally aspirated V12 technology before the era of hybridization. Its 6.5-liter V12 engine delivers 730 horsepower through an innovative 7-speed Independent Shifting Rod (ISR) transmission, enabling lightning-fast gear changes. The car features advanced all-wheel drive with rear-wheel steering for exceptional stability at high speeds and agility in corners. Constructed with extensive carbon fiber components, it achieves an optimal power-to-weight ratio. The Aventador S also showcases Lamborghini's cutting-edge aerodynamics with active elements and magnetorheological suspension for dynamic handling. This model serves as the final evolution of pure internal combustion supercars from Lamborghini before the brand transitioned to hybrid powertrains."