# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "GWM-Haval Xiaolong"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "20,000~30,000"
prize_comments = "The GWM-Haval Xiaolong is priced between $25,000 and $28,000 USD depending on the trim level and options."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Compact SUV"
vehicle_category_bottom_comments = "The Xiaolong is positioned as a compact SUV with a sporty design and urban-focused capabilities."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Great Wall Motor"
brand_comments = "GWM (Great Wall Motor) is a Chinese automotive manufacturer known for its SUVs and pickup trucks."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Plug-in Hybird Electric Vehicle"
powertrain_type_comments = "The Xiaolong features a plug-in hybrid electric powertrain combining a 1.5L turbocharged engine with an electric motor."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "3.5~4.5 cubic meter"
passenger_sapce_volume_comments = "The passenger space is 3.8 cubic meters, offering ample room for five adults."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "400~500L"
trunk_volume_comments = "The trunk capacity is 420L, expandable to 1,200L with rear seats folded."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The wheelbase is 2,700mm, providing a stable ride and good interior space."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "150~200mm"
chassis_height_comments = "The ground clearance is 180mm, suitable for urban and light off-road use."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "The Xiaolong features a dynamic, sporty design with sharp lines and an aggressive front grille."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "High"
body_line_smoothness_comments = "The body lines are sleek and aerodynamic, contributing to a low drag coefficient."

# color, candidate values: "Bright Colors", "Neutral Colors", "Dark Colors"
color = "Neutral Colors"
color_comments = "Available in neutral colors like silver, gray, and white, with optional bright accents."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "The interior features brushed metal trim and soft-touch materials for a premium feel."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Standard anti-lock braking system for improved safety."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program is standard across all trims."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "6"
airbag_count_comments = "Includes front, side, and curtain airbags for comprehensive protection."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Lether"
seat_material_comments = "Leather upholstery is standard, with optional ventilated seats."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "High"
noise_insulation_comments = "Advanced noise insulation materials reduce road and wind noise."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "Yes"
voice_interfaction_comments = "Supports voice commands for navigation, media, and climate control."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "Yes"
ota_updates_comments = "Over-the-air updates for infotainment and vehicle systems."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "Level 2 autonomy with adaptive cruise control and lane-keeping assist."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "Yes"
adaptive_cruise_control_comments = "Includes full-speed adaptive cruise control with stop-and-go functionality."

# traffic_jam_assit, candidate values: "Yes", "No"
traffic_jam_assit = "Yes"
traffic_jam_assit_comments = "Traffic jam assist helps in low-speed, congested driving conditions."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "Yes"
automatic_emergency_braking_comments = "Automatic emergency braking with pedestrian detection."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "Yes"
lane_keep_assist_comments = "Lane keep assist helps maintain the vehicle within the lane markings."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Remote parking is not available on this model."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "Yes"
auto_parking_comments = "Automatic parking assist for parallel and perpendicular spaces."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "Yes"
blind_spot_detection_comments = "Blind spot monitoring with rear cross-traffic alert."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "Yes"
fatigue_driving_detection_comments = "Driver fatigue detection system alerts when signs of drowsiness are detected."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "1.6~2.0L"
engine_displacement_comments = "1.5L turbocharged gasoline engine paired with an electric motor."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "120~180kW"
motor_power_comments = "Electric motor produces 130kW (174hp) for combined system output."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "30~50kWh"
battery_capacity_comments = "19.94kWh battery pack for electric-only driving."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "50~70L"
fuel_tank_capacity_comments = "55L fuel tank for extended range."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "200~300hp"
horsepower_comments = "Combined system output of 245hp (183kW)."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "300~400N·m"
torque_comments = "Combined torque output of 375N·m."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "6~8s"
zero_to_one_hundred_km_h_acceleration_time_comments = "0-100 km/h in 7.5 seconds."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "160~200km/h"
top_speed_comments = "Electronically limited to 180 km/h."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "4~6L/100km"
fuel_consumption_comments = "Combined fuel consumption of 5.3L/100km in hybrid mode."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "12~14kWh/100km"
electric_consumption_comments = "Electric consumption of 13.5kWh/100km in EV mode."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "400~800km"
driving_range_comments = "Total range of 600km (combined), with 80km electric-only range."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "All-Wheel Drive"
drive_type_comments = "Intelligent AWD system with multiple drive modes."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Front MacPherson strut and rear multi-link independent suspension."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Medium"
passibility_comments = "Suitable for urban and light off-road conditions."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "5-seat"
seat_layout_comments = "Standard five-seat configuration with 60:40 split-folding rear seats."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "Yes"
city_commuting_comments = "Ideal for city driving with good maneuverability and EV mode."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "Yes"
highway_long_distance_comments = "Comfortable for long-distance travel with adaptive cruise control."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Medium"
off_road_capability_comments = "Capable of light off-road use with AWD and decent ground clearance."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "Yes"
cargo_capability_comments = "Good cargo space with flexible seating configurations."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Performs well in cold climates with battery heating system."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "Effective cooling systems for battery and powertrain in hot conditions."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Medium"
size_comments = "Compact SUV dimensions with a balanced footprint."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Medium"
vehicle_usability_comments = "Versatile for both urban and occasional adventure use."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "High"
aesthetics_comments = "Modern, sporty design with premium touches."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "Medium"
energy_consumption_level_comments = "Efficient hybrid system balances performance and economy."

# confort_level: candidate values: "Low", "Medium", "High"
confort_level = "High"
confort_level_comments = "Comfortable ride quality with premium interior materials."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "High"
smartness_comments = "Advanced connectivity and driver assistance features."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "High"
family_friendliness_comments = "Safe, practical, and comfortable for family use."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details="The GWM-Haval Xiaolong is a plug-in hybrid compact SUV offering a blend of efficiency, performance, and advanced technology. Key features include a 1.5L turbocharged engine paired with a 130kW electric motor, 19.94kWh battery for 80km EV range, intelligent AWD, and Level 2 autonomous driving capabilities. It combines sporty design with practical SUV functionality."
key_details_comments = "The GWM-Haval Xiaolong represents Great Wall Motor's foray into the competitive PHEV compact SUV segment. Its plug-in hybrid system combines a 1.5L turbocharged gasoline engine with a 130kW electric motor, delivering 245hp and 375N·m of torque while achieving an impressive 5.3L/100km fuel consumption. The 19.94kWh battery enables 80km of pure electric driving, making it ideal for daily commutes, while the 55L fuel tank provides extended range for longer journeys. The vehicle features Level 2 autonomous driving capabilities, including adaptive cruise control and lane keep assist, along with a premium interior featuring metal trim and leather seats. Its 2,700mm wheelbase and independent suspension provide a comfortable ride, while the 180mm ground clearance and intelligent AWD system offer light off-road capability. The Xiaolong stands out with its sporty design, advanced connectivity features including OTA updates, and comprehensive safety systems including 6 airbags and blind spot detection."