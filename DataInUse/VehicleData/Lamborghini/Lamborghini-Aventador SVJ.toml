# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Lamborghini-Aventador SVJ"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "Above 100,000"
prize_comments = "The Lamborghini-Aventador SVJ is priced between $517,770 and $600,000 USD depending on options and customization."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Two-door Hardtop Sports Car"
vehicle_category_bottom_comments = "The Aventador SVJ is a high-performance, two-door coupe with a fixed roof, designed for extreme performance."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Lamborghini"
brand_comments = "Lamborghini is an Italian luxury sports car manufacturer known for high-performance vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Gasoline Engine"
powertrain_type_comments = "The Aventador SVJ is powered by a naturally aspirated V12 gasoline engine."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The cabin is compact, optimized for driver-focused performance with limited passenger space."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "200~300L"
trunk_volume_comments = "Trunk capacity is approximately 270L, typical for high-performance sports cars."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The wheelbase is 2700mm, providing a balance between stability and agility."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "100~130mm"
chassis_height_comments = "Ground clearance is approximately 125mm, optimized for aerodynamic performance."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "Aggressive, aerodynamic design with sharp lines and large air intakes."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "Medium"
body_line_smoothness_comments = "The design features angular lines and sharp edges, typical of Lamborghini's styling."

# color, candidate values: "Bright Colors, "Neutral Colors, "Dark Colors"
color = "Bright Colors"
color_comments = "Lamborghini offers vibrant colors like Arancio Atlas (orange) and Giallo Auge (yellow)."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "Premium materials include carbon fiber, Alcantara, and aluminum accents."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Standard anti-lock braking system for improved control during hard braking."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program is included to enhance vehicle stability."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "6"
airbag_count_comments = "Includes dual front, side, and knee airbags for driver and passenger."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Lether"
seat_material_comments = "Premium leather upholstery with optional Alcantara inserts."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "Low"
noise_insulation_comments = "Minimal noise insulation to emphasize the engine and exhaust sound."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "Yes"
voice_interfaction_comments = "Basic voice control for infotainment functions is available."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "No"
ota_updates_comments = "No over-the-air updates; software updates require dealer visits."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "Limited to basic driver assistance features like lane-keeping and adaptive cruise control."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "Yes"
adaptive_cruise_control_comments = "Included as part of the optional ADAS package."

# traffic_jam_assist, candidate values: "Yes", "No"
traffic_jam_assist = "No"
traffic_jam_assist_comments = "Not available due to the car's performance-oriented nature."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "Yes"
automatic_emergency_braking_comments = "Standard feature to prevent collisions at low speeds."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "Yes"
lane_keep_assist_comments = "Available as part of the optional driver assistance package."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Not available; the car is designed for manual driving engagement."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "No"
auto_parking_comments = "No automated parking features are offered."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "Yes"
blind_spot_detection_comments = "Optional feature for improved safety during lane changes."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "No"
fatigue_driving_detection_comments = "Not included; the car assumes an engaged driver."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "6.0~6.5L"
engine_displacement_comments = "6.5L (6,498 cc) naturally aspirated V12 engine."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "None"
motor_power_comments = "Not applicable; the car is not electric."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "None"
battery_capacity_comments = "Not applicable; the car does not have a high-voltage battery."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "Above 70L"
fuel_tank_capacity_comments = "85L fuel tank capacity for extended range despite high consumption."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "Above 400hp"
horsepower_comments = "759 hp (566 kW) at 8,500 rpm."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "Above 500N·m"
torque_comments = "720 N·m (531 lb-ft) at 6,750 rpm."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "Below 4s"
zero_to_one_hundred_km_h_acceleration_time_comments = "2.8 seconds (0-100 km/h)."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "Above 300km/h"
top_speed_comments = "350 km/h (217 mph) electronically limited."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "Above 8L/100km"
fuel_consumption_comments = "Approximately 17.2 L/100 km (combined cycle)."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "None"
electric_consumption_comments = "Not applicable; the car is not electric."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "Approximately 350 km on a full tank under mixed driving conditions."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "All-Wheel Drive"
drive_type_comments = "Lamborghini's Haldex-based AWD system with rear-wheel bias."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Push-rod activated horizontal damper setup for optimal performance."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Low"
passibility_comments = "Low ground clearance and stiff suspension limit rough terrain capability."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "2-seat"
seat_layout_comments = "Strictly a two-seater configuration."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "No"
city_commuting_comments = "Not practical for daily city use due to low ground clearance and stiff suspension."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "Yes"
highway_long_distance_comments = "Comfortable at high speeds but limited by fuel range."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Not designed for off-road use."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "No"
cargo_capability_comments = "Minimal trunk space limits cargo capacity."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Performance may be affected in extreme cold, but the car is operable."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "Engine and cooling systems are designed for high-temperature performance."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Medium"
size_comments = "Mid-size dimensions for a supercar (4,943 mm long, 2,098 mm wide)."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Small"
vehicle_usability_comments = "Limited practicality due to performance-focused design."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "High"
aesthetics_comments = "Striking, aggressive design with high visual appeal."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "High"
energy_consumption_level_comments = "High fuel consumption is typical for a V12 supercar."

# comfort_level: candidate values: "Low", "Medium", "High"
comfort_level = "Medium"
comfort_level_comments = "Firm ride quality but with premium interior materials."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "Medium"
smartness_comments = "Basic infotainment and driver aids, but not as advanced as luxury sedans."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Low"
family_friendliness_comments = "Two-seat configuration and limited storage make it unsuitable for families."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details="The Lamborghini Aventador SVJ (Super Veloce Jota) is a limited-edition, track-focused variant of the Aventador. It features a 6.5L V12 engine producing 759 hp, all-wheel drive, and advanced aerodynamics including Lamborghini's ALA (Aerodinamica Lamborghini Attiva) system. The SVJ holds the Nürburgring production car lap record (6:44.97). Only 900 units were produced, with an additional 63 SVJ 63 editions to celebrate Lamborghini's founding year."
key_details_comments = "The Lamborghini Aventador SVJ (Super Veloce Jota) represents the pinnacle of Lamborghini's V12-powered supercars, combining extreme performance with limited production exclusivity. Its 6.5L naturally aspirated V12 engine delivers 759 hp, making it one of the most powerful production Lamborghinis ever built. The SVJ features advanced aerodynamics with the ALA (Aerodinamica Lamborghini Attiva) active system, generating optimal downforce (up to 40% more than the Aventador S) while maintaining low drag. It holds the Nürburgring production car lap record of 6:44.97, demonstrating its track capabilities. The SVJ's all-wheel-drive system, push-rod suspension, and extensive use of carbon fiber (including the monocoque) contribute to its 1,525 kg dry weight. Only 900 units were produced globally, with an additional 63 SVJ 63 editions commemorating Lamborghini's founding year (1963). The SVJ represents the ultimate evolution of the Aventador platform before Lamborghini transitioned to hybrid powertrains."