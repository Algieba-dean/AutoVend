# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Geely-Panda Mini EV"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "Below 10,000"
prize_comments = "The Geely-Panda Mini EV is priced between $5,000 and $9,000 USD, making it one of the most affordable electric vehicles in the market."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Micro Sedan"
vehicle_category_bottom_comments = "The Geely-Panda Mini EV is classified as a micro sedan due to its compact dimensions and urban-focused design."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Geely"
brand_comments = "Geely is a Chinese automotive manufacturer known for producing affordable and innovative vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Battery Electric Vehicle"
powertrain_type_comments = "The Geely-Panda Mini EV is a pure electric vehicle with no internal combustion engine."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The passenger space is compact, with approximately 3.0 cubic meters, suitable for urban commuting."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "200~300L"
trunk_volume_comments = "The trunk offers 230L of storage space, adequate for small bags and groceries."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2300~2650mm"
wheelbase_comments = "The wheelbase is 2,450mm, contributing to its compact and maneuverable design."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "100~130mm"
chassis_height_comments = "The chassis height is 120mm, optimized for urban driving."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "The design features playful and youthful styling, with rounded edges and a cute appearance."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "High"
body_line_smoothness_comments = "The body lines are smooth and aerodynamic, enhancing efficiency."

# color, candidate values: "Bright Colors", "Neutral Colors", "Dark Colors"
color = "Bright Colors"
color_comments = "The car is available in vibrant colors like pink, blue, and green, targeting younger buyers."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "The interior features minimalist metal trim accents for a modern look."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Anti-lock Braking System is standard for improved safety."

# ESP, candidate values: "Yes", "No"
ESP = "No"
ESP_comments = "Electronic Stability Program is not available in this budget model."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "2"
airbag_count_comments = "The car is equipped with dual front airbags."

# seat_material, candidate values: "Leather", "Fabric"
seat_material = "Fabric"
seat_material_comments = "The seats are upholstered in durable fabric."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "Medium"
noise_insulation_comments = "Noise insulation is adequate for city driving but may be noticeable at higher speeds."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "No"
voice_interfaction_comments = "The basic infotainment system does not support voice interaction."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "No"
ota_updates_comments = "Over-the-air updates are not supported."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "The car offers basic Level 2 autonomous features like lane-keeping assist."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "No"
adaptive_cruise_control_comments = "Adaptive cruise control is not available."

# traffic_jam_assit, candidate values: "Yes", "No"
traffic_jam_assit = "No"
traffic_jam_assit_comments = "Traffic jam assist is not included."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "Yes"
automatic_emergency_braking_comments = "Automatic emergency braking is standard for collision avoidance."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "Yes"
lane_keep_assist_comments = "Lane keep assist is included as part of the Level 2 autonomy."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Remote parking is not available."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "No"
auto_parking_comments = "Auto parking is not supported."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "No"
blind_spot_detection_comments = "Blind spot detection is not included."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "No"
fatigue_driving_detection_comments = "Fatigue driving detection is not available."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "None"
engine_displacement_comments = "Not applicable as this is a pure electric vehicle."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "Below 70kW"
motor_power_comments = "The electric motor produces 30kW (40hp), suitable for city commuting."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "30~50kWh"
battery_capacity_comments = "The battery capacity is 17.3kWh, providing a modest range for urban use."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "None"
fuel_tank_capacity_comments = "Not applicable as this is a pure electric vehicle."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "Below 100hp"
horsepower_comments = "The motor delivers 40hp, adequate for city driving."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "Below 200N·m"
torque_comments = "The motor produces 110N·m of torque, providing quick acceleration from a standstill."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "Above 10s"
zero_to_one_hundred_km_h_acceleration_time_comments = "The 0-100 km/h acceleration time is approximately 12 seconds."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "Below 150km/h"
top_speed_comments = "The top speed is limited to 100 km/h, suitable for urban environments."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "None"
fuel_consumption_comments = "Not applicable as this is a pure electric vehicle."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "10~12kWh/100km"
electric_consumption_comments = "The energy consumption is approximately 11kWh/100km, making it efficient for city use."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "The NEDC-rated range is 200 km, but real-world range is closer to 150 km in urban conditions."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "Rear-Wheel Drive"
drive_type_comments = "The rear-wheel-drive layout enhances maneuverability in tight spaces."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Front MacPherson strut and rear multi-link independent suspension provide a comfortable ride."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Low"
passibility_comments = "The low ground clearance limits off-road capability."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "4-seat"
seat_layout_comments = "The car accommodates four passengers with two front and two rear seats."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "Yes"
city_commuting_comments = "The compact size and electric powertrain make it ideal for city commuting."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "No"
highway_long_distance_comments = "The limited range and top speed make it unsuitable for long highway trips."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "The car is designed for urban roads, not off-road conditions."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "Yes"
cargo_capability_comments = "The small trunk and foldable rear seats offer basic cargo capability."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "The battery performs adequately in cold weather but with reduced range."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "The battery and cooling system are designed to handle high temperatures effectively."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Small"
size_comments = "The Geely-Panda Mini EV is one of the smallest electric vehicles available."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Small"
vehicle_usability_comments = "Best suited for short urban trips due to its compact size and limited range."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "Medium"
aesthetics_comments = "The design is cute and playful but not premium."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "Low"
energy_consumption_level_comments = "The electric consumption is very efficient for city driving."

# confort_level: candidate values: "Low", "Medium", "High"
confort_level = "Medium"
confort_level_comments = "Comfort is adequate for short trips but may be lacking for longer journeys."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "Medium"
smartness_comments = "Basic smart features are included, but advanced tech is missing."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Low"
family_friendliness_comments = "The small size limits practicality for families."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details = "The Geely-Panda Mini EV is an ultra-compact electric vehicle designed for urban commuting. It features a cute, playful design, rear-wheel drive, and a modest 150 km real-world range. Priced affordably, it's ideal for city dwellers needing basic transportation with zero emissions."
key_details_comments = "The Geely-Panda Mini EV is an ultra-affordable urban electric vehicle designed specifically for city commuting. With its micro sedan dimensions (2,450mm wheelbase) and playful panda-inspired styling, it offers basic transportation with zero emissions. Key features include a 30kW electric motor, 17.3kWh battery providing ~150km real-world range, rear-wheel drive for maneuverability, and Level 2 autonomous driving features. The minimalist interior with fabric seats and metal trim caters to budget-conscious buyers. While lacking advanced tech like OTA updates or voice control, it includes essential safety features like ABS and dual airbags. Its 100km/h top speed and 12s 0-100km/h acceleration make it unsuitable for highways, but perfect for congested city streets."