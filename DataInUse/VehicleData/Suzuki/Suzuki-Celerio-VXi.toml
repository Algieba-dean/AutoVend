# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Suzuki-Celerio-VXi"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "10,000~20,000"
prize_comments = "The Suzuki-Celerio-VXi is priced between $12,000 and $18,000 USD depending on the market and optional features."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Micro Sedan"
vehicle_category_bottom_comments = "The Celerio is classified as a micro sedan due to its compact dimensions and efficient urban design."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Suzuki"
brand_comments = "Suzuki is a Japanese automotive manufacturer known for compact and efficient vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Gasoline Engine"
powertrain_type_comments = "The Celerio-VXi is powered by a 1.0L 3-cylinder gasoline engine."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The cabin offers approximately 2.8 cubic meters of passenger space, optimized for urban commuting."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "200~300L"
trunk_volume_comments = "The trunk capacity is 254 liters, suitable for small luggage and groceries."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2300~2650mm"
wheelbase_comments = "The wheelbase measures 2425mm, contributing to its compact and maneuverable design."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "130~150mm"
chassis_height_comments = "The ground clearance is 140mm, typical for urban sedans."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "The Celerio-VXi features a youthful and sporty design with sharp lines and a modern front grille."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "Medium"
body_line_smoothness_comments = "The body features a mix of sharp creases and smooth curves for a balanced aesthetic."

# color, candidate values: "Bright Colors", "Neutral Colors", "Dark Colors"
color = "Bright Colors"
color_comments = "Available in vibrant options like Pearl Arctic White, Silky Silver, and Premium Orange."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "The cabin features metallic accents on the dashboard and door panels for a modern look."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Equipped with Anti-lock Braking System for enhanced safety."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program is standard to improve vehicle stability."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "2"
airbag_count_comments = "Includes dual front airbags for driver and passenger protection."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Fabric"
seat_material_comments = "Upholstered in durable fabric with ergonomic design for comfort."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "Medium"
noise_insulation_comments = "Moderate noise insulation with some road noise noticeable at highway speeds."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "No"
voice_interfaction_comments = "The basic infotainment system does not support voice interaction."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "No"
ota_updates_comments = "The system does not support over-the-air updates."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "None"
autonomous_driving_level_comments = "The Celerio-VXi does not feature autonomous driving capabilities."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "No"
adaptive_cruise_control_comments = "Not available in this model."

# traffic_jam_assist, candidate values: "Yes", "No"
traffic_jam_assist = "No"
traffic_jam_assist_comments = "No traffic jam assist feature is included."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "No"
automatic_emergency_braking_comments = "Not equipped with automatic emergency braking."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "No"
lane_keep_assist_comments = "Lane keep assist is not available."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "The vehicle does not support remote parking."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "No"
auto_parking_comments = "No auto-parking feature is included."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "No"
blind_spot_detection_comments = "Blind spot detection is not available."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "No"
fatigue_driving_detection_comments = "No fatigue driving detection system."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "1.0~1.6L"
engine_displacement_comments = "The Celerio-VXi is powered by a 1.0L K10B 3-cylinder petrol engine."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "None"
motor_power_comments = "Not applicable as this is a gasoline-powered vehicle."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "None"
battery_capacity_comments = "Not applicable for gasoline engine models."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "30~50L"
fuel_tank_capacity_comments = "The fuel tank holds 35 liters of petrol."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "Below 100hp"
horsepower_comments = "Produces 67 horsepower at 6,000 rpm."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "Below 200N·m"
torque_comments = "Generates 90 N·m of torque at 3,500 rpm."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "Above 10s"
zero_to_one_hundred_km_h_acceleration_time_comments = "0-100 km/h acceleration takes approximately 13.5 seconds."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "Below 150km/h"
top_speed_comments = "The top speed is electronically limited to 145 km/h."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "4~6L/100km"
fuel_consumption_comments = "Official combined fuel consumption is 4.7L/100km."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "None"
electric_consumption_comments = "Not applicable for gasoline engine models."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "Approximately 350-400 km range on a full tank in mixed driving conditions."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "Font-Wheel Drive"
drive_type_comments = "Front-wheel drive configuration for better fuel efficiency."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Front MacPherson strut and rear torsion beam suspension setup."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Medium"
passibility_comments = "Suitable for urban roads with occasional rough patches."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "5-seat"
seat_layout_comments = "Standard 5-seat configuration with 60:40 split folding rear seats."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "Yes"
city_commuting_comments = "Ideal for city driving with its compact size and fuel efficiency."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "Yes"
highway_long_distance_comments = "Capable of highway driving but optimized for urban use."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Not designed for off-road use due to low ground clearance."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "Yes"
cargo_capability_comments = "Limited but practical cargo space with foldable rear seats."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Performs adequately in cold climates with proper maintenance."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "Medium"
heat_resistance_comments = "Standard cooling system handles moderate heat conditions well."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Small"
size_comments = "One of the most compact sedans in its segment at 3,695mm length."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Small"
vehicle_usability_comments = "Best suited for small families or urban singles/couples."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "Medium"
aesthetics_comments = "Modern but simple design language typical of budget compact cars."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "Low"
energy_consumption_level_comments = "Excellent fuel efficiency makes it economical to run."

# comfort_level: candidate values: "Low", "Medium", "High"
comfort_level = "Medium"
comfort_level_comments = "Adequate comfort for its class with basic amenities."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "Low"
smartness_comments = "Basic features without advanced connectivity options."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Medium"
family_friendliness_comments = "Suitable for small families but limited space for growing needs."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details = "The Suzuki Celerio-VXi is an affordable, fuel-efficient micro sedan designed primarily for urban commuting. Its highlights include a peppy 1.0L engine, compact dimensions for easy parking, and low running costs. While it lacks premium features, it offers reliability and practicality for budget-conscious buyers."
key_details_comments = "The Suzuki Celerio-VXi is an economical micro sedan designed for urban environments, featuring a lightweight 1.0L 3-cylinder engine that delivers excellent fuel efficiency (4.7L/100km). Its compact 3,695mm length makes it ideal for city driving and tight parking spaces. While offering basic safety features like ABS and dual airbags, it lacks advanced driver aids. The 254L trunk and 5-seat configuration provide practical space for small families or commuters. With a modest 67hp output, it prioritizes affordability and low running costs over performance, making it popular in emerging markets and as a budget city car."