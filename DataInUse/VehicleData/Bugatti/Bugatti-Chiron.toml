# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Bugatti-Chiron"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "Above 100,000"
prize_comments = "The Bugatti Chiron starts at approximately $3 million USD, with special editions exceeding $5 million USD."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Two-door Hardtop Sports Car"
vehicle_category_bottom_comments = "The Bugatti Chiron is a high-performance, two-door hypercar with a fixed roof."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Bugatti"
brand_comments = "Bugatti is a French luxury hypercar manufacturer known for extreme performance and exclusivity."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Gasoline Engine"
powertrain_type_comments = "The Chiron is powered by a quad-turbocharged W16 gasoline engine with no hybrid or electric assistance."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The Chiron offers approximately 2.8 cubic meters of passenger space, focused on a two-seat configuration."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "200~300L"
trunk_volume_comments = "The Chiron has a modest 280L trunk capacity, typical for hypercars prioritizing performance over storage."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The Chiron's wheelbase measures 2711mm, providing stability at extreme speeds."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "100~130mm"
chassis_height_comments = "With a ground clearance of approximately 120mm, the Chiron is optimized for aerodynamic performance."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "The Chiron features an aggressive, aerodynamic design focused on performance and speed."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "High"
body_line_smoothness_comments = "Every surface is meticulously designed for optimal aerodynamics and aesthetic appeal."

# color, candidate values: "Bright Colors, "Neutral Colors, "Dark Colors"
color = "Bright Colors"
color_comments = "Bugatti offers extensive customization, including vibrant colors like Bugatti Blue and exposed carbon fiber."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "Premium materials include aluminum, titanium, and carbon fiber, with optional leather accents."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Advanced ABS system for high-speed braking stability."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program tailored for hypercar dynamics."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "6"
airbag_count_comments = "Includes dual front, side, and knee airbags for both occupants."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Lether"
seat_material_comments = "Hand-stitched premium leather with optional custom embroidery."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "Medium"
noise_insulation_comments = "Balances cabin quietness with the visceral sound of the W16 engine."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "Yes"
voice_interfaction_comments = "Basic voice commands for infotainment functions."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "No"
ota_updates_comments = "Focus is on driving dynamics rather than connected features."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "Limited to adaptive cruise control and lane assist."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "Yes"
adaptive_cruise_control_comments = "High-speed adaptive cruise for highway driving."

# traffic_jam_assit, candidate values: "Yes", "No"
traffic_jam_assit = "No"
traffic_jam_assit_comments = "Not a priority for this performance-focused vehicle."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "Yes"
automatic_emergency_braking_comments = "High-performance braking system with collision detection."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "Yes"
lane_keep_assist_comments = "Basic lane-keeping for highway use."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Not available due to the car's manual-focused nature."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "No"
auto_parking_comments = "Drivers are expected to handle parking manually."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "Yes"
blind_spot_detection_comments = "Essential given the car's high-speed capabilities."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "Yes"
fatigue_driving_detection_comments = "Monitors driver alertness during long drives."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "Above 6.0L"
engine_displacement_comments = "8.0-liter quad-turbocharged W16 engine."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "None"
motor_power_comments = "Not applicable - pure internal combustion powertrain."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "None"
battery_capacity_comments = "No hybrid system - pure gasoline powertrain."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "Above 70L"
fuel_tank_capacity_comments = "100-liter fuel tank to feed the powerful W16 engine."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "Above 400hp"
horsepower_comments = "1,500 hp in standard form, with some versions exceeding 1,600 hp."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "Above 500N·m"
torque_comments = "1,600 N·m of torque available from 2,000 to 6,000 rpm."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "Below 4s"
zero_to_one_hundred_km_h_acceleration_time_comments = "0-100 km/h in just 2.4 seconds."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "Above 300km/h"
top_speed_comments = "Electronically limited to 420 km/h (261 mph)."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "Above 8L/100km"
fuel_consumption_comments = "Approximately 22.5 L/100km combined (EPA estimate)."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "None"
electric_consumption_comments = "Not applicable - pure internal combustion powertrain."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "Approximately 350 km on a full tank at moderate speeds."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "All-Wheel Drive"
drive_type_comments = "Permanent all-wheel drive system for maximum traction."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Adaptive damping system with multiple drive modes."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Low"
passibility_comments = "Low ground clearance limits rough terrain capability."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "2-seat"
seat_layout_comments = "Strict two-seat configuration for driver and passenger."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "No"
city_commuting_comments = "Not designed for daily commuting due to size and fuel consumption."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "Yes"
highway_long_distance_comments = "Excellent high-speed stability for long journeys."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Not designed for off-road use."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "No"
cargo_capability_comments = "Minimal storage space prioritizes performance."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Performance may be affected in extreme cold conditions."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "Engine and cooling systems designed for extreme performance."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Medium"
size_comments = "Compact footprint relative to its performance capabilities."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Small"
vehicle_usability_comments = "Limited practicality due to performance focus."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "High"
aesthetics_comments = "Iconic design with exceptional attention to detail."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "High"
energy_consumption_level_comments = "Extreme performance comes with high fuel consumption."

# confort_level: candidate values: "Low", "Medium", "High"
confort_level = "Medium"
confort_level_comments = "Surprisingly comfortable for a hypercar, but still firm."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "Medium"
smartness_comments = "Focus is on mechanical engineering rather than digital features."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Low"
family_friendliness_comments = "Two-seat configuration limits family utility."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details="""
key_details_comments = """