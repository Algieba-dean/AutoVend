# The Car Information Labels, contains PriciseLabels and AmbibuousLabels

title = "CarLabels"

car_model = ""

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = ""

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = ""

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = ""

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = ""


# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = ""

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = ""

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = ""

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = ""

# design_style, candidate values: "Sporty", "Business"
design_style = ""

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = ""

# color, candidate values: "Bright Colors, "Neutral Colors, "Dark Colors"
color = ""

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = ""

# ABS, candidate values: "Yes", "No"
ABS = ""

# ESP, candidate values: "Yes", "No"
ESP = ""

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = ""

# seat_material, candidate values: "Lether", "Fabric"
seat_material = ""

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = ""

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = ""

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = ""

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = ""

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = ""

# traffic_jam_assist, candidate values: "Yes", "No"
traffic_jam_assist = ""

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = ""

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = ""

# remote_parking, candidate values: "Yes", "No"
remote_parking = ""

# auto_parking, candidate values: "Yes", "No"
auto_parking = ""

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = ""

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = ""

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = ""

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = ""

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = ""

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = ""

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = ""

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = ""

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time 
zero_to_one_hundred_km_h_acceleration_time = ""

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = ""

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = ""

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = ""

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = ""

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = ""

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = ""

# passibility, candidate values: "Low", "Medium", "High"
passibility = ""

# seat_layout, candidate values: "5-seat", "7-seat"
seat_layout = ""

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = ""

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = ""

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = ""

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = ""

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = ""

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = ""


[AmbibuousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = ""

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = ""

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = ""

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = ""

# comfort_level: candidate values: "Low", "Medium", "High"
comfort_level = ""

# smartness, candidate values: "Low", "Medium", "High"
smartness = ""

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = ""

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details=""