# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Peugeot-E-308 Allure Electric Hatchback with Style"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "40,000~60,000"
prize_comments = "The Peugeot-E-308 Allure Electric Hatchback with Style is priced between $45,000 and $55,000 USD depending on the trim level and options."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Compact Sedan"
vehicle_category_bottom_comments = "The E-308 is a compact electric hatchback with a sleek design and practical dimensions."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Peugeot"
brand_comments = "Peugeot is a French automotive manufacturer known for its stylish and innovative vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Battery Electric Vehicle"
powertrain_type_comments = "The E-308 is a fully electric vehicle with no internal combustion engine."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "3.5~4.5 cubic meter"
passenger_sapce_volume_comments = "The E-308 offers a spacious interior with approximately 4.0 cubic meters of passenger space."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "300~400L"
trunk_volume_comments = "The trunk capacity is 361L, expandable to 1,267L with rear seats folded."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The wheelbase is 2,672mm, providing a stable and comfortable ride."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "130~150mm"
chassis_height_comments = "The chassis height is approximately 140mm, balancing comfort and handling."

# design_style, candidate values: "Sporty", "Business"
design_style = "Sporty"
design_style_comments = "The E-308 features a sleek, sporty design with sharp lines and a modern aesthetic."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "High"
body_line_smoothness_comments = "The body lines are smooth and aerodynamic, contributing to a low drag coefficient."

# color, candidate values: "Bright Colors, "Neutral Colors, "Dark Colors"
color = "Neutral Colors"
color_comments = "Available in a range of neutral colors, including metallic finishes."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "The interior features high-quality metal trim and soft-touch materials."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Standard anti-lock braking system for improved safety."

# ESP, candidate values: "Yes", "No"
ESP = "Yes"
ESP_comments = "Electronic Stability Program is included for enhanced control."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "6"
airbag_count_comments = "Includes front, side, and curtain airbags for comprehensive protection."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Lether"
seat_material_comments = "Premium leather upholstery with optional heated seats."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "High"
noise_insulation_comments = "Excellent noise insulation for a quiet cabin experience."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "Yes"
voice_interfaction_comments = "Supports voice commands via the Peugeot i-Cockpit system."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "Yes"
ota_updates_comments = "Over-the-air updates for the infotainment and vehicle systems."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "L2"
autonomous_driving_level_comments = "Level 2 autonomous driving with adaptive cruise control and lane-keeping assist."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "Yes"
adaptive_cruise_control_comments = "Includes adaptive cruise control with stop-and-go functionality."

# traffic_jam_assist, candidate values: "Yes", "No"
traffic_jam_assist = "Yes"
traffic_jam_assist_comments = "Traffic jam assist helps in slow-moving traffic."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "Yes"
automatic_emergency_braking_comments = "Automatic emergency braking detects and prevents collisions."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "Yes"
lane_keep_assist_comments = "Lane keep assist helps maintain lane position."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Remote parking is not available on this model."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "Yes"
auto_parking_comments = "Automatic parking assist is included."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "Yes"
blind_spot_detection_comments = "Blind spot detection alerts the driver to vehicles in adjacent lanes."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "Yes"
fatigue_driving_detection_comments = "Fatigue detection system alerts the driver if signs of drowsiness are detected."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "None"
engine_displacement_comments = "Not applicable as this is a fully electric vehicle."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "120~180kW"
motor_power_comments = "The electric motor delivers 156 kW (209 hp) of power."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "50~80kWh"
battery_capacity_comments = "The battery capacity is 54 kWh, providing a range of up to 400 km (WLTP)."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "None"
fuel_tank_capacity_comments = "Not applicable as this is a fully electric vehicle."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "100~200hp"
horsepower_comments = "The electric motor produces 209 hp (156 kW)."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "300~400N·m"
torque_comments = "The electric motor delivers 345 N·m of torque, providing strong acceleration."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "8~10s"
zero_to_one_hundred_km_h_acceleration_time_comments = "Accelerates from 0 to 100 km/h in 9.8 seconds."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "160~200km/h"
top_speed_comments = "The top speed is electronically limited to 170 km/h."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "None"
fuel_consumption_comments = "Not applicable as this is a fully electric vehicle."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "12~14kWh/100km"
electric_consumption_comments = "Average energy consumption is 13.1 kWh/100 km (WLTP)."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "The WLTP-certified range is up to 400 km on a single charge."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "Font-Wheel Drive"
drive_type_comments = "Front-wheel drive configuration for efficient power delivery."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Independent Suspension"
suspension_comments = "Front MacPherson struts and rear torsion beam for a balanced ride."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Medium"
passibility_comments = "Suitable for urban and highway driving, but not for off-road use."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "5-seat"
seat_layout_comments = "Standard 5-seat configuration with ample legroom."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "Yes"
city_commuting_comments = "Ideal for city commuting with its compact size and electric efficiency."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "Yes"
highway_long_distance_comments = "Comfortable for highway driving with a decent range."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Not designed for off-road use due to low ground clearance."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "Yes"
cargo_capability_comments = "Good cargo space with foldable rear seats."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Battery performance is maintained in cold weather with a thermal management system."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "High"
heat_resistance_comments = "Efficient cooling system ensures battery performance in hot climates."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Medium"
size_comments = "Compact dimensions with a length of 4.3 meters, making it easy to maneuver in urban areas."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Medium"
vehicle_usability_comments = "Balanced for both city and highway use, with practical cargo space."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "High"
aesthetics_comments = "Sleek, modern design with premium finishes."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "Low"
energy_consumption_level_comments = "Efficient electric powertrain with low energy consumption."

# comfort_level: candidate values: "Low", "Medium", "High"
comfort_level = "High"
comfort_level_comments = "Premium interior materials and ergonomic seating provide high comfort."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "High"
smartness_comments = "Advanced infotainment and driver-assistance features."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Medium"
family_friendliness_comments = "Good for small families, but limited by compact size."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details="The Peugeot E-308 Allure Electric Hatchback with Style combines a stylish design with advanced electric technology. It features a 156 kW electric motor, a 54 kWh battery, and a range of up to 400 km (WLTP). The interior is premium with leather seats and metal trim, and it includes advanced safety and driver-assistance features like adaptive cruise control and lane-keeping assist. Ideal for urban commuting and highway driving, it offers a blend of efficiency, comfort, and modern aesthetics."
key_details_comments = "The Peugeot E-308 Allure Electric Hatchback with Style is a premium compact electric vehicle that combines French design flair with cutting-edge EV technology. Its 156 kW (209 hp) electric motor delivers 345 N·m of torque for responsive acceleration, while the 54 kWh battery provides a practical 400 km WLTP range - ideal for both urban commuting and longer journeys. The vehicle features Peugeot's distinctive i-Cockpit interior with premium leather seats, metal trim accents, and a driver-focused layout. Advanced driver assistance systems include Level 2 autonomous driving capabilities with adaptive cruise control, lane keep assist, and traffic jam assist. The hatchback design offers 361L of cargo space (expandable to 1,267L), making it practical for everyday use. With its combination of style, technology, and efficiency, the E-308 represents Peugeot's vision for accessible premium electric mobility."