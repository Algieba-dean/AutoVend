# The Car Information Labels, contains PriciseLabels and AmbiguousLabels

title = "CarLabels"

car_model = "Renault-Express Compact Utility Van"

[PriciseLabels]

# prize, candidate values: "Below 10,000", "10,000~20,000", "20,000~30,000", "30,000~40,000", "40,000~60,000", "60,000~100,000", "Above 100,000"
prize = "10,000~20,000"
prize_comments = "The Renault-Express Compact Utility Van is priced between $12,000 and $18,000 USD, depending on the trim and options."

# vehicle_category_bottom, candidate values: "Micro Sedan", "Compact Sedan", "B-Segment Sedan", "C-Segment Sedan", "D-Segment Sedan", "Compact SUV", "Mid-Size SUV", "Mid-to-Large SUV", "Off-road SUV", "All-terrain SUV", "Compact MPV", "Mid-Size MPV", "Large MPV", "Mid-Size Business MPV", "Large-Size Busness MPV", "Two-door Convertible Sprots Car", "Four-door Convertible Sprots Car", "Two-door Hardtop Sports Car", "Four-door Hardtop Sports Car"
vehicle_category_bottom = "Compact Utility Van"
vehicle_category_bottom_comments = "The Renault-Express is classified as a compact utility van, designed for urban cargo and light commercial use."

# brand, candidate values: "Volkswagen", "Audi", "Porsche", "Bentley", "Bugatti", "Lamborghini", "BMW", "Mercedes-Benz", "Peugeot", "Renault", "Jaguar", "Land Rover", "Rolls-Royce", "Volvo", "Chevrolet", "Buick", "Cadillac", "Ford", "Tesla", "Toyota", "Honda", "Nissan", "Suzuki", "Mazda", "Hyundai", "BYD","Geely","Changan","Great Wall Motor","Nio","XiaoMi","XPeng"
brand = "Renault"
brand_comments = "Renault is a French automotive manufacturer known for its practical and economical vehicles."

# powertrain_type, candidate values: "Gasoline Engine", "Diesel Engine", "Hybrid Electric Vehicle", "Plug-in Hybird Electric Vehicle", "Range-Extended Electric Vehicle", "Battery Electric Vehicle"
powertrain_type = "Gasoline Engine"
powertrain_type_comments = "The Renault-Express is equipped with a gasoline engine, offering simplicity and low maintenance costs."

# passenger_sapce_volume, candidate values: "2.5~3.5 cubic meter", "3.5~4.5 cubic meter", "4.5~5.5 cubic meter", "Above 5.5 cubic meter"
passenger_sapce_volume = "2.5~3.5 cubic meter"
passenger_sapce_volume_comments = "The passenger compartment offers approximately 3.0 cubic meters of space, suitable for small crews or light cargo."

# trunk_volume, candidate values: "200~300L", "300~400L", "400~500L", "Above 500L"
trunk_volume = "Above 500L"
trunk_volume_comments = "The cargo area provides 600L of space, expandable to 1,200L with rear seats folded."

# wheelbase, candidate values: "2300~2650mm", "2650~2800mm", "2800~2950mm", "2950~3100mm", "Above 3100mm"
wheelbase = "2650~2800mm"
wheelbase_comments = "The wheelbase measures 2,700mm, balancing maneuverability and interior space."

# chassis_height, candidate values: "100~130mm", "130~150mm", "150~200mm", "Above 200mm"
chassis_height = "150~200mm"
chassis_height_comments = "The chassis height is 170mm, providing adequate ground clearance for urban driving."

# design_style, candidate values: "Sporty", "Business"
design_style = "Business"
design_style_comments = "The design is utilitarian, prioritizing functionality over aesthetics."

# body_line_smoothness, candidate values: "High", "Medium", "Low"
body_line_smoothness = "Low"
body_line_smoothness_comments = "The body features angular lines, typical of commercial utility vehicles."

# color, candidate values: "Bright Colors", "Neutral Colors", "Dark Colors"
color = "Neutral Colors"
color_comments = "Available in neutral colors like white, gray, and silver, suited for commercial use."

# interior_material_texture, candidate values: "Wood Trim", "Metal Trim"
interior_material_texture = "Metal Trim"
interior_material_texture_comments = "The interior features durable metal and plastic trim for longevity."

# ABS, candidate values: "Yes", "No"
ABS = "Yes"
ABS_comments = "Equipped with Anti-lock Braking System (ABS) for improved safety."

# ESP, candidate values: "Yes", "No"
ESP = "No"
ESP_comments = "Electronic Stability Program (ESP) is not available in this model."

# airbag_count, candidate values: "2", "4", "6", "8", "10", "Above 10"
airbag_count = "2"
airbag_count_comments = "Includes dual front airbags for driver and passenger."

# seat_material, candidate values: "Lether", "Fabric"
seat_material = "Fabric"
seat_material_comments = "Seats are upholstered in durable fabric for practicality."

# noise_insulation, candidate values: "High", "Medium", "Low"
noise_insulation = "Low"
noise_insulation_comments = "Basic noise insulation, typical for utility vehicles."

# voice_interfaction, candidate values: "Yes", "No", does the infotainment system of the car support voice interfaction
voice_interfaction = "No"
voice_interfaction_comments = "No voice interaction support in the basic infotainment system."

# ota_updates, candidate values: "Yes", "No", does the infotainment system of the car support ota updates
ota_updates = "No"
ota_updates_comments = "Over-the-air updates are not supported."

# autonomous_driving_level, candidate values: "L2", "L3"
autonomous_driving_level = "None"
autonomous_driving_level_comments = "No autonomous driving features are included."

# adaptive_cruise_control, candidate values: "Yes", "No"
adaptive_cruise_control = "No"
adaptive_cruise_control_comments = "Adaptive cruise control is not available."

# traffic_jam_assist, candidate values: "Yes", "No"
traffic_jam_assist = "No"
traffic_jam_assist_comments = "Traffic jam assist is not included."

# automatic_emergency_braking, candidate values: "Yes", "No"
automatic_emergency_braking = "No"
automatic_emergency_braking_comments = "Automatic emergency braking is not featured."

# lane_keep_assist, candidate values: "Yes", "No"
lane_keep_assist = "No"
lane_keep_assist_comments = "Lane keep assist is not available."

# remote_parking, candidate values: "Yes", "No"
remote_parking = "No"
remote_parking_comments = "Remote parking functionality is not supported."

# auto_parking, candidate values: "Yes", "No"
auto_parking = "No"
auto_parking_comments = "Auto-parking is not included."

# blind_spot_detection, candidate values: "Yes", "No"
blind_spot_detection = "No"
blind_spot_detection_comments = "Blind spot detection is not available."

# fatigue_driving_detection, candidate values: "Yes", "No"
fatigue_driving_detection = "No"
fatigue_driving_detection_comments = "Fatigue driving detection is not featured."

# engine_displacement, candidate values: "Below 1.0L", "1.0~1.6L", "1.6~2.0L", "2.0~2.5L", "2.5~3.5L", "3.5~6.0L", "Above 6.0L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
engine_displacement = "1.0~1.6L"
engine_displacement_comments = "The Renault-Express is powered by a 1.2L gasoline engine."

# motor_power, candidate values: "Below 70kW", "70~120kW", "120~180kW", "180~250kW", "250~400kW", "Above 400kW"
motor_power = "None"
motor_power_comments = "Not applicable as this is a gasoline-powered vehicle."

# battery_capacity, candidate values: "30~50kWh", "50~80kWh", "80~100kWh", "Above 100kWh", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
battery_capacity = "None"
battery_capacity_comments = "Not applicable for gasoline-powered vehicles."

# fuel_tank_capacity, candidate values: "30~50L", "50~70L", "Above 70L", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_tank_capacity = "30~50L"
fuel_tank_capacity_comments = "The fuel tank holds 40 liters of gasoline."

# horsepower, candidate values: "Below 100hp", "100~200hp", "200~300hp", "300~400hp", "Above 400hp"
horsepower = "Below 100hp"
horsepower_comments = "The engine produces 75 horsepower, suitable for urban and light-duty use."

# torque, candidate values: "Below 200N·m", "200~300N·m", "300~400N·m", "400~500N·m", "Above 500N·m"
torque = "Below 200N·m"
torque_comments = "Generates 110 N·m of torque, adequate for city driving."

# zero_to_one_hundred_km_h_acceleration_time, candidate values: "Above 10s", "8~10s", "6~8s", "4~6s", "Below 4s",  vehicle from 0 to 100 km/h acceleration time
zero_to_one_hundred_km_h_acceleration_time = "Above 10s"
zero_to_one_hundred_km_h_acceleration_time_comments = "Accelerates from 0-100 km/h in approximately 14 seconds."

# top_speed, candidate values: "Below 150km/h", "160~200km/h", "200~240km/h", "240~300km/h", "Above 300km/h"
top_speed = "Below 150km/h"
top_speed_comments = "The top speed is limited to 140 km/h."

# fuel_consumption, candidate values: "4~6L/100km", "6~8L/100km", "Above 8L/100km", for powertrain_type is "Battery Electric Vehicle", it's valid, value can be "None"
fuel_consumption = "6~8L/100km"
fuel_consumption_comments = "Average fuel consumption is 7.2L/100km in mixed driving conditions."

# electric_consumption, candidate values: "10~12kWh/100km", "12~14kWh/100km", "Above 14kWh/100km", for powertrain_type is "Gasoline Engine" or "Diesel Engine", value can be "None"
electric_consumption = "None"
electric_consumption_comments = "Not applicable for gasoline-powered vehicles."

# driving_range, candidate values: "300~400km", "400~800km", "Above 800km"
driving_range = "300~400km"
driving_range_comments = "The driving range is approximately 350 km on a full tank."

# drive_type, candidate values: "Font-Wheel Drive", "Rear-Wheel Drive", "All-Wheel Drive"
drive_type = "Font-Wheel Drive"
drive_type_comments = "Front-wheel drive configuration for better fuel efficiency."

# suspension, candidate values: "Independent Suspension", "Non-independent Suspension"
suspension = "Non-independent Suspension"
suspension_comments = "Uses a simple torsion beam rear suspension for durability."

# passibility, candidate values: "Low", "Medium", "High"
passibility = "Medium"
passibility_comments = "Suitable for urban roads and light off-road conditions."

# seat_layout, candidate values: "2-seat", "4-seat", "5-seat", "6-seat", "7-seat"
seat_layout = "5-seat"
seat_layout_comments = "Standard configuration includes five seats."

# city_commuting, candidate values: "Yes", "No", the value of car commuting needs, if support city commuting
city_commuting = "Yes"
city_commuting_comments = "Ideal for city commuting due to compact size and fuel efficiency."

# highway_long_distance, candidate values: "Yes", "No", the value of car commuting needs, if support highway long distance commuting
highway_long_distance = "No"
highway_long_distance_comments = "Limited comfort and power make it less suitable for long highway trips."

# off_road_capability, candidate values: "Low", "Medium", "High"
off_road_capability = "Low"
off_road_capability_comments = "Designed primarily for paved roads."

# cargo_capability, candidate values: "Yes", "No"
cargo_capability = "Yes"
cargo_capability_comments = "Excellent cargo capacity for its size, ideal for small businesses."

# clod_resistance, candidate values: "High", "Medium", "Low"
clod_resistance = "Medium"
clod_resistance_comments = "Performs adequately in cold climates but may require warm-up time."

# heat_resistance, candidate values: "High", "Medium", "Low"
heat_resistance = "Medium"
heat_resistance_comments = "Engine cooling is sufficient for most hot weather conditions."


[AmbiguousLabels]

# size: candidate values: "Small", "Medium", "Large", the size of the vehicle
size = "Small"
size_comments = "Compact dimensions make it easy to maneuver in tight urban spaces."

# vehicle_usability: candidate values: "Small", "Medium", "Large"
vehicle_usability = "Medium"
vehicle_usability_comments = "Balances cargo space and urban practicality."

# aesthetics: candidate values: "Low", "Medium", "High"
aesthetics = "Low"
aesthetics_comments = "Functional design with minimal aesthetic appeal."

# energy_consumption_level: candidate values: "Low", "Medium", "High"
energy_consumption_level = "Medium"
energy_consumption_level_comments = "Moderate fuel consumption for its class."

# comfort_level: candidate values: "Low", "Medium", "High"
comfort_level = "Low"
comfort_level_comments = "Basic comfort features, prioritizing utility over luxury."

# smartness, candidate values: "Low", "Medium", "High"
smartness = "Low"
smartness_comments = "Lacks advanced smart features or connectivity."

# family_friendliness, candidate values: "Low", "Medium", "High"
family_friendliness = "Medium"
family_friendliness_comments = "Suitable for small families but lacks premium family-oriented features."

[KeyDetails]
# key_details, a value to introduce more KeyDetails for current car model
key_details = "The Renault-Express Compact Utility Van is a practical, no-frills vehicle designed for urban cargo transport and small businesses. It features a 1.2L gasoline engine, front-wheel drive, and a spacious cargo area (600L). Priced affordably, it excels in fuel efficiency and maneuverability but lacks advanced tech or comfort features."
key_details_comments = "The Renault-Express Compact Utility Van is a purpose-built commercial vehicle designed for small businesses and urban logistics. Its compact dimensions (4.2m length) make it highly maneuverable in tight city streets while offering a surprisingly spacious 600L cargo area (expandable to 1,200L). Powered by a fuel-efficient 1.2L gasoline engine (75hp), it achieves 7.2L/100km combined consumption. The utilitarian design prioritizes functionality with durable materials throughout, including metal trim interiors and fabric seats. While lacking advanced tech features, it includes essential safety systems like ABS and dual airbags. Priced between $12,000-$18,000 USD, it represents an economical solution for last-mile delivery and tradespeople needing reliable urban transport."


### Notes: